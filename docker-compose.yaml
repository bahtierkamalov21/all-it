version: "3"

services:
  backend:
    build: ./backend
    container_name: backend
    restart: always
    command: >
      bash -c "python3 manage.py makemigrations
      && python3 manage.py migrate
      && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    networks:
      devnetwork:
        ipv4_address: 172.30.0.10
    ports:
      - 80:8000
    depends_on:
      - database
  frontend:
    build: .
    container_name: client
    restart: always
    command: npm run serve
    volumes:
      - ./:/app
    networks:
      devnetwork:
        ipv4_address: 172.30.0.11
    ports:
      - 8080:8080
    depends_on:
     - backend
  database:
    image: postgres
    container_name: database
    restart: always
    environment:
      - POSTGRES_PASSWORD=gwSQv9ii
      - POSTGRES_DB=database
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      devnetwork:
        ipv4_address: 172.30.0.12
    ports:
      - 5432:5432
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=bahtierkamalov21@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=ba819063
    networks:
      devnetwork:
        ipv4_address: 172.30.0.13
    ports:
      - 5050:5050
  nginx:
    image: nginx
    container_name: nginx_server
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./serts/certificate.crt:/usr/share/nginx/serts/certificate.crt
      - ./serts/privateKey.key:/usr/share/nginx/serts/certificate.key
    networks:
      devnetwork:
        ipv4_address: 172.30.0.14
    ports:
      - 80:80
      - 443:443
volumes:
  pg_data:
networks:
  network:
    driver: bridge
  devnetwork:
    ipam:
      config:
        - subnet: 172.30.0.0/24
